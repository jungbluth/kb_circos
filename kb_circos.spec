/*
A KBase module: kb_circos
*/

module kb_circos {

    /* A boolean - 0 for false, 1 for true.
        @range (0, 1)
    */
    typedef int boolean;

    /* An X/Y/Z style reference
    */
    typedef string obj_ref;

    /*
        required params:
        assembly_ref: Genome assembly object
        reads_file: reads object (PairedEndLibrary/SingleEndLibrary) upon which circos will be run
        workspace_name: the name of the workspace it gets saved to.

        optional params:
        read_mapping_tool: tool to use for read mapping


    */
    typedef structure {
        obj_ref assembly_ref;
        string workspace_name;
        list<obj_ref> reads_file;
        string output_assembly_name;

        string read_mapping_tool;

    } circosInputParams;

    /*
        result_directory: folder path that holds all files generated by run_kb_circos
        report_name: report name generated by KBaseReport
        report_ref: report reference generated by KBaseReport
    */
    typedef structure{
        string result_directory;
        obj_ref assembly_obj_ref;
        string report_name;
        string report_ref;
    }circosResult;

    funcdef run_kb_circos(circosInputParams params)
        returns (circosResult returnVal) authentication required;

};
